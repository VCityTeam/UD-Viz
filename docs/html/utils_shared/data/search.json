{"list":[{"title":"ProcessInterval","link":"<a href=\"ProcessInterval.html\">ProcessInterval</a>","description":"<p>Create a new ProcessInterval.</p>"},{"title":"ProcessInterval#addtickRequester","link":"<a href=\"ProcessInterval.html#addtickRequester\">addtickRequester</a>","description":"<p>Add a new ProcessIntervalTickRequester to the list.</p>"},{"title":"ProcessInterval#fps","link":"<a href=\"ProcessInterval.html#fps\">fps</a>","description":"<p>Frame rate per second of the process.</p>"},{"title":"ProcessInterval#pause","link":"<a href=\"ProcessInterval.html#pause\">pause</a>","description":"<p>If true, the process is paused and ProcessIntervalTickRequesters are not called.</p>"},{"title":"ProcessInterval#setPause","link":"<a href=\"ProcessInterval.html#setPause\">setPause</a>","description":"<p>Pause or resume the process.</p>"},{"title":"ProcessInterval#start","link":"<a href=\"ProcessInterval.html#start\">start</a>","description":"<p>Start the process and call the tick function on each interval.</p>"},{"title":"ProcessInterval#stop","link":"<a href=\"ProcessInterval.html#stop\">stop</a>","description":"<p>Stop the process and clear all tick requesters.</p>"},{"title":"ProcessInterval#tickRequesters","link":"<a href=\"ProcessInterval.html#tickRequesters\">tickRequesters</a>","description":"<p>Buffer of ProcessIntervalTickRequesters.</p>"},{"title":"ProcessIntervalTickRequester","link":"<a href=\"global.html#ProcessIntervalTickRequester\">ProcessIntervalTickRequester</a>","description":"<p>Callback function for ProcessInterval to execute on each tick.</p>"},{"title":"arrayEquals","link":"<a href=\"global.html#arrayEquals\">arrayEquals</a>","description":"<p>Check if both array are equals</p>"},{"title":"arrayPushOnce","link":"<a href=\"global.html#arrayPushOnce\">arrayPushOnce</a>","description":"<p>Check if the element is alreeady included in the array if not push it</p>"},{"title":"checkIfSubStringIsEuler","link":"<a href=\"global.html#checkIfSubStringIsEuler\">checkIfSubStringIsEuler</a>","description":"<p>Take an array of string and check if it is in euler format</p>"},{"title":"checkIfSubStringIsMatrix4","link":"<a href=\"global.html#checkIfSubStringIsMatrix4\">checkIfSubStringIsMatrix4</a>","description":"<p>Take an array of string and check if it is in matrix4 format</p>"},{"title":"checkIfSubStringIsVector3","link":"<a href=\"global.html#checkIfSubStringIsVector3\">checkIfSubStringIsVector3</a>","description":"<p>Take an array of string and check if it is in vector3 format</p>"},{"title":"computeFileFormat","link":"<a href=\"global.html#computeFileFormat\">computeFileFormat</a>","description":"<p>Compute the last string after the . in the filename</p>"},{"title":"computeFilenameFromPath","link":"<a href=\"global.html#computeFilenameFromPath\">computeFilenameFromPath</a>","description":"<p>Compute filename from path</p>"},{"title":"dataUriToBuffer","link":"<a href=\"global.html#dataUriToBuffer\">dataUriToBuffer</a>","description":"<p>Convert a data URI into a Buffer</p>"},{"title":"eulerArrayFromURIComponent","link":"<a href=\"global.html#eulerArrayFromURIComponent\">eulerArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"},{"title":"getAttributeByPath","link":"<a href=\"global.html#getAttributeByPath\">getAttributeByPath</a>","description":"<p>Gets an attribute of an object from the given path. To get nested attributes,\nthe path qualifiers must be separated by dots ('.'). If the path is not\nnested (does not contain any dot), the function is equivalent to <code>obj[path]</code>.</p>"},{"title":"imageToDataURI","link":"<a href=\"global.html#imageToDataURI\">imageToDataURI</a>","description":"<p>Converts the raw content of an array buffer (as retrieved by a GET request\non a file) to a data URI. This is required, for example, to display images\nfetched from the server. As we need authentication headers to retrieve some\nprotected files, we get the raw data dynamically and need to convert it to\na data URI do display it.\nThe basic scheme of the URI is defined in the\n<a href=\"https://tools.ietf.org/html/rfc2397\">RFC 2397</a>, with the mediaType set to\n<code>mimeType</code> and the raw data converted to base64.</p>"},{"title":"insert","link":"<a href=\"global.html#insert\">insert</a>"},{"title":"int32ArrayToObject","link":"<a href=\"global.html#int32ArrayToObject\">int32ArrayToObject</a>","description":"<p>Convert a Int32Array into an Object</p>"},{"title":"isNumeric","link":"<a href=\"global.html#isNumeric\">isNumeric</a>","description":"<p>Check if a string is a valid number\ninspired of https://stackoverflow.com/questions/175739/built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number</p>"},{"title":"matrix4ArrayFromURIComponent","link":"<a href=\"global.html#matrix4ArrayFromURIComponent\">matrix4ArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"},{"title":"objectEquals","link":"<a href=\"global.html#objectEquals\">objectEquals</a>","description":"<p>Check if two json object are equals</p>"},{"title":"objectOverWrite","link":"<a href=\"global.html#objectOverWrite\">objectOverWrite</a>","description":"<p>Overwrite identical key of jsonOverWrited with the one matching in jsonModel\nCreate key of jsonModel which are not in jsonOverWrited</p>"},{"title":"objectParse","link":"<a href=\"global.html#objectParse\">objectParse</a>","description":"<p>Apply a callback to each key value couple of an object</p>"},{"title":"objectParseNumeric","link":"<a href=\"global.html#objectParseNumeric\">objectParseNumeric</a>","description":"<p>Replace all valid number string in a json object by a float</p>"},{"title":"objectToInt32Array","link":"<a href=\"global.html#objectToInt32Array\">objectToInt32Array</a>","description":"<p>Convert an Object into a Int32Array</p>"},{"title":"polygon2DArea","link":"<a href=\"global.html#polygon2DArea\">polygon2DArea</a>"},{"title":"removeEmptyValues","link":"<a href=\"global.html#removeEmptyValues\">removeEmptyValues</a>","description":"<p>Removes empty fields from a FormData. Useful for update requests that\nwould update those fields to an empty string if they were sent in the\nbody. To check if a value is empty, this function just convert it into\na boolean.</p>"},{"title":"removeFromArray","link":"<a href=\"global.html#removeFromArray\">removeFromArray</a>","description":"<p>Remove an element if it's present in an array</p>"},{"title":"rotate2DCoord","link":"<a href=\"global.html#rotate2DCoord\">rotate2DCoord</a>"},{"title":"round","link":"<a href=\"global.html#round\">round</a>"},{"title":"throttle","link":"<a href=\"global.html#throttle\">throttle</a>","description":"<p>Limit the execution of a function every delay ms</p>"},{"title":"vector3ArrayFromURIComponent","link":"<a href=\"global.html#vector3ArrayFromURIComponent\">vector3ArrayFromURIComponent</a>","description":"<p>Taking a string from the unpacking URI and splitting it into an array of strings.</p>"},{"title":"vector3ToLabel","link":"<a href=\"global.html#vector3ToLabel\">vector3ToLabel</a>"}]}